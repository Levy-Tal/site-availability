# Default values for site-availability.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: levytal/site-availability
  pullPolicy: Always
  tag: "" # Default tag, can be overridden

imagePullSecrets: []

# Name overrides
nameOverride: ""
fullnameOverride: ""

# Environment variables
env: {}
#  CONFIG_FILE: /app/config.yaml

# Credentials configuration
credentials:
  # Name of the secret containing credentials
  credentialsSecretName: ""

# Secret references to be passed as environment variables
extraSecretNameForEnvFrom: []

# if you want to use the chart for config file
configFile:
  enabled: true
  content: {}

# Pod annotations for extra metadata
podAnnotations: {}

# Pod and container security settings
podSecurityContext:
  fsGroup: 10001

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  allowPrivilegeEscalation: false

# Service settings
service:
  type: ClusterIP
  port: 8080

# Ingress settings (optional)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resource requests and limits
resources:
  limits:
    memory: 128Mi
    ephemeral-storage: 50Mi
    cpu: 200m
  requests:
    cpu: 50m
    memory: 128Mi
    ephemeral-storage: 50Mi

# Node and affinity settings for pod scheduling
nodeSelector: {}

tolerations: []

affinity: {}

# Volumes and mounts
extraVolumes: []
#- name: ca
#  secret:
#    secretName: ca-secret
#    defaultMode: 0644

extraVolumeMounts: []
#- name: ca
#  mountPath: /app/ca.crt
#  subPath: ca.crt

serviceMonitor:
  enabled: true
  scrapeInterval: 10s
  # Authentication settings for ServiceMonitor
  auth:
    enabled: false
    type: "basic" # "basic" or "bearer"
    # Secret reference for authentication
    secret:
      name: ""
      # For basic auth from secret
      usernameKey: "username"
      passwordKey: "password"
      # For bearer token from secret
      tokenKey: "token"

# Pod Disruption Budget settings
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: 1

prometheusRules:
  enabled: true
  # Individual rule enable/disable settings
  rules:
    appDown: true
    appUnavailable: true
    noMetricsReceived: true
    siteSyncFailure: true
    siteSyncHighLatency: true
    siteSyncDown: true
  # Alert filtering for AppDown rule
  appDownAlert:
    # Filter apps by label (e.g., env=prod, team=backend)
    # Leave empty to alert for all apps
    filterLabel: ""
    filterValue: ""

grafanaDashboards:
  enabled: true

externalSecrets: []
#  - name: my-secret-1
#    namespace: default
#    refreshInterval: "1h"
#    secretStore:
#      name: aws-secret-store
#    targetName: my-k8s-secret-1
#    creationPolicy: Owner
#    data:
#      - secretKey: db-password
#        remoteKey: production/db-password
#      - secretKey: api-key
#        remoteKey: production/api-key
