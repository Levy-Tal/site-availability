# Default values for site-availability.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: levytal/site-availability
  pullPolicy: IfNotPresent
  tag: ""  # Default tag, can be overridden

imagePullSecrets: []

# Name overrides
nameOverride: ""
fullnameOverride: ""

# Environment variables for the exporter container
env:
  CONFIG_FILE: /app/config.yaml
#  CUSTOM_CA_PATH: /app/ca.crt

# Secret references to be passed as environment variables
extraSecretNameForEnvFrom: []


# if you want to use the chart for config file
configFile:
  enabled: true
  content: 
#    scrape_interval: 10s
#    scrape_timeout: 1s
#    max_parallel_scrapes: 10
#    docs_title: "DR documentation"
#    docs_url: "https://google.com"
#    locations:
#    - name: Hadera
#      latitude: 32.446235
#      longitude: 34.903852
#    - name: עברית
#      latitude: 31.782904
#      longitude: 35.214774
#    - name: טל לוי
#      latitude: 31.245381
#      longitude: 34.788745
#    apps:
#    - name: app1
#      location: Hadera
#      metric: up{job="site-availability"}
#      prometheus: http://prometheus-operated:9090/
#    - name: app3
#      location: עברית
#      metric: up{container="alertmanager"}
#      prometheus: http://prometheus-operated:9090/
#    - name: app4
#      location: טל לוי
#      metric: 1-up{container="alertmanager"}
#      prometheus: http://promethaseus-operated:9090/
#    - name: app2
#      location: Hadera
#      metric: up{job="site-availability"}
#      prometheus: http://prometheus-operated:9090/
#    - name: app5
#      location: עברית
#      metric: up{container="alertmanager"}
#      prometheus: http://prometheus-operated:9090/
#    - name: app6
#      location: טל לוי
#      metric: 1-up{container="alertmanager"}
#      prometheus: http://prometsdfheus-operated:9090/
#    - name: app8
#      location: טל לוי
#      metric: 1-up{container="alertmanager"}
#      prometheus: http://prometheus-operated:9090/
#    - name: app7
#      location: טל לוי
#      metric: 1-up{container="alertmanager"}
#      prometheus: http://prometheus-operated:9090/


# Pod annotations for extra metadata
podAnnotations: {}

# Pod and container security settings
podSecurityContext:
  fsGroup: 10001

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001

# Service settings
service:
  type: ClusterIP
  port: 8080

# Ingress settings (optional)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resource requests and limits
resources:
  limits:
    memory: 128Mi
    ephemeral-storage: 50Mi
  requests:
    cpu: 50m
    memory: 128Mi
    ephemeral-storage: 50Mi

# Node and affinity settings for pod scheduling
nodeSelector: {}

tolerations: []

affinity: {}

# Volumes and mounts
extraVolumes: []
#- name: ca
#  secret:
#    secretName: ca-secret
#    defaultMode: 0644

extraVolumeMounts: []
#- name: ca
#  mountPath: /app/ca.crt
#  subPath: ca.crt

serviceMonitor:
  enabled: true
  scrapeInterval: 10s

prometheusRules:
  enabled: true

grafanaDashboards:
  enabled: true

externalSecrets: []
#  - name: my-secret-1
#    namespace: default
#    refreshInterval: "1h"
#    secretStore:
#      name: aws-secret-store
#    targetName: my-k8s-secret-1
#    creationPolicy: Owner
#    data:
#      - secretKey: db-password
#        remoteKey: production/db-password
#      - secretKey: api-key
#        remoteKey: production/api-key