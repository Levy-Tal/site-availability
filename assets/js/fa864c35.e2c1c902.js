"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1261],{4239:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"usage/installation/docker-compose","title":"Production Deployment with Docker Compose","description":"This guide explains how to deploy the Site Availability application in a production environment using Docker Compose, with Nginx as a secure reverse proxy for SSL termination and authentication.","source":"@site/docs/usage/installation/docker-compose.md","sourceDirName":"usage/installation","slug":"/usage/installation/docker-compose","permalink":"/site-availability/docs/usage/installation/docker-compose","draft":false,"unlisted":false,"editUrl":"https://github.com/Levy-Tal/site-availability/tree/main/docs/docs/usage/installation/docker-compose.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Welcome to Site Availability","permalink":"/site-availability/docs/introduction"},"next":{"title":"Production Deployment with Helm","permalink":"/site-availability/docs/usage/installation/helm-chart"}}');var i=r(4848),o=r(8453);const a={sidebar_position:1},s="Production Deployment with Docker Compose",c={},l=[{value:"1. Prepare Configuration Files",id:"1-prepare-configuration-files",level:2},{value:"<code>config.yaml</code> (minimal example)",id:"configyaml-minimal-example",level:3},{value:"<code>credentials.yaml</code> (minimal example)",id:"credentialsyaml-minimal-example",level:3},{value:"2. Create SSL Certificates",id:"2-create-ssl-certificates",level:2},{value:"3. Create <code>docker-compose.yml</code>",id:"3-create-docker-composeyml",level:2},{value:"4. Example <code>nginx.conf</code>",id:"4-example-nginxconf",level:2},{value:"5. Best Practices",id:"5-best-practices",level:2},{value:"6. Start the Stack",id:"6-start-the-stack",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"production-deployment-with-docker-compose",children:"Production Deployment with Docker Compose"})}),"\n",(0,i.jsx)(n.p,{children:"This guide explains how to deploy the Site Availability application in a production environment using Docker Compose, with Nginx as a secure reverse proxy for SSL termination and authentication."}),"\n",(0,i.jsx)(n.h2,{id:"1-prepare-configuration-files",children:"1. Prepare Configuration Files"}),"\n",(0,i.jsx)(n.p,{children:"Before deploying, create the following minimal configuration files in your deployment directory:"}),"\n",(0,i.jsxs)(n.h3,{id:"configyaml-minimal-example",children:[(0,i.jsx)(n.code,{children:"config.yaml"})," (minimal example)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'server_settings:\n  port: 8080\n  host_url: "https://your-domain.com" # Required: Used for OIDC callback URLs\n\nlocations:\n  - name: New York\n    latitude: 40.712776\n    longitude: -74.005974\n  - name: San Francisco\n    latitude: 37.774929\n    longitude: -122.419418\n  - name: Chicago\n    latitude: 41.878113\n    longitude: -87.629799\n\nsources:\n  - name: prom1\n    type: prometheus\n    config:\n      url: http://nginx:9090\n      apps:\n        - name: app1\n          location: New York\n          metric: up{instance="app:8080", job="app"}\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"credentialsyaml-minimal-example",children:[(0,i.jsx)(n.code,{children:"credentials.yaml"})," (minimal example)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'sources:\n  - name: prom1\n    config:\n      auth: bearer\n      token: "test-token-123"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"2-create-ssl-certificates",children:"2. Create SSL Certificates"}),"\n",(0,i.jsxs)(n.p,{children:["For production, use certificates from a trusted CA (e.g., Let's Encrypt). Place your ",(0,i.jsx)(n.code,{children:"fullchain.pem"})," and ",(0,i.jsx)(n.code,{children:"privkey.pem"})," in a ",(0,i.jsx)(n.code,{children:"certs/"})," directory."]}),"\n",(0,i.jsxs)(n.h2,{id:"3-create-docker-composeyml",children:["3. Create ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})]}),"\n",(0,i.jsx)(n.p,{children:"Below is a production-ready Docker Compose file with Nginx as a reverse proxy for SSL and optional authentication. It uses a single app container for Site Availability, a fixed image tag, and best practices for security and automatic restarts."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'services:\n  app:\n    image: levytal/site-availability:2.4.0\n    restart: always\n    environment:\n      - CONFIG_FILE=/app/config.yaml\n      - CREDENTIALS_FILE=/app/credentials.yaml\n    volumes:\n      - ./config.yaml:/app/config.yaml:ro\n      - ./credentials.yaml:/app/credentials.yaml:ro\n    ports:\n      - "8080:8080"\n\n  nginx:\n    image: nginx:latest\n    restart: always\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n      - ./certs:/etc/nginx/certs:ro\n      # Uncomment if using HTTP Basic Auth\n      # - ./htpasswd:/etc/nginx/.htpasswd:ro\n    ports:\n      - "80:80"\n      - "443:443"\n    depends_on:\n      - app\n\nnetworks:\n  default:\n    driver: bridge\n'})}),"\n",(0,i.jsxs)(n.h2,{id:"4-example-nginxconf",children:["4. Example ",(0,i.jsx)(n.code,{children:"nginx.conf"})]}),"\n",(0,i.jsx)(n.p,{children:"Configure Nginx to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Terminate SSL (HTTPS)"}),"\n",(0,i.jsx)(n.li,{children:"Forward all requests to the single app container"}),"\n",(0,i.jsxs)(n.li,{children:["Optionally, enable HTTP Basic Auth for ",(0,i.jsx)(n.code,{children:"/api"})," (but NOT for ",(0,i.jsx)(n.code,{children:"/sync"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Ensure ",(0,i.jsx)(n.code,{children:"/sync"})," is SSL-protected and proxied, but not basic-authenticated"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-nginx",children:'events {}\n\nhttp {\n  server {\n    listen 80;\n    server_name your-domain.com;\n    return 301 https://$host$request_uri;\n  }\n\n  server {\n    listen 443 ssl;\n    server_name your-domain.com;\n\n    ssl_certificate /etc/nginx/certs/fullchain.pem;\n    ssl_certificate_key /etc/nginx/certs/privkey.pem;\n\n    # /sync is NOT protected by HTTP Basic Auth, but is SSL-terminated\n    location /sync {\n      proxy_pass http://app:8080/sync;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    # Uncomment to enable HTTP Basic Auth for /api (except /sync)\n    # location ^~ /api/ {\n    #   auth_basic "Protected";\n    #   auth_basic_user_file /etc/nginx/.htpasswd;\n    #   proxy_pass http://app:8080/api/;\n    #   proxy_set_header Host $host;\n    #   proxy_set_header X-Real-IP $remote_addr;\n    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    #   proxy_set_header X-Forwarded-Proto $scheme;\n    # }\n\n    location /api/ {\n      proxy_pass http://app:8080/api/;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    location / {\n      proxy_pass http://app:8080/;\n      proxy_set_header Host $host;\n      proxy_set_header X-Real-IP $remote_addr;\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header X-Forwarded-Proto $scheme;\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tip:"})," To generate a ",(0,i.jsx)(n.code,{children:".htpasswd"})," file for HTTP Basic Auth, use:\n",(0,i.jsx)(n.code,{children:"docker run --rm httpd:alpine htpasswd -nbB admin strongpassword > certs/.htpasswd"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"5-best-practices",children:"5. Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Use ",(0,i.jsx)(n.code,{children:"restart: always"})]})," to ensure containers restart after server reboots or failures."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mount configuration and credentials as read-only"})," (",(0,i.jsx)(n.code,{children:":ro"}),") for security."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Store SSL certificates securely"})," and restrict permissions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Keep your images up to date"})," and use version tags for reproducibility."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitor logs and set up alerting"})," for failures."]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Back up your configuration and credentials regularly."})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"6-start-the-stack",children:"6. Start the Stack"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Your Site Availability app will be available at ",(0,i.jsx)(n.code,{children:"https://your-domain.com"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"For advanced configuration, scaling, or troubleshooting, see the rest of the documentation."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);