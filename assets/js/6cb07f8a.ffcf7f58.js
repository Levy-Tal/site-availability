"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6758],{2031:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"development/backend/sources","title":"Backend Sources","description":"This page explains how backend sources work and how to add a new source type to Site Availability.","source":"@site/docs/development/backend/sources.md","sourceDirName":"development/backend","slug":"/development/backend/sources","permalink":"/site-availability/docs/development/backend/sources","draft":false,"unlisted":false,"editUrl":"https://github.com/Levy-Tal/site-availability/tree/main/docs/docs/development/backend/sources.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Overview","permalink":"/site-availability/docs/development/architecture"},"next":{"title":"Contributing Guide","permalink":"/site-availability/docs/development/contributing"}}');var s=r(4848),c=r(8453);const t={sidebar_position:4},o="Backend Sources",a={},l=[{value:"Source Interface",id:"source-interface",level:2},{value:"Supported Source Types",id:"supported-source-types",level:2},{value:"Adding a New Source",id:"adding-a-new-source",level:2},{value:"Minimal Source Config Example",id:"minimal-source-config-example",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"backend-sources",children:"Backend Sources"})}),"\n",(0,s.jsx)(n.p,{children:"This page explains how backend sources work and how to add a new source type to Site Availability."}),"\n",(0,s.jsx)(n.h2,{id:"source-interface",children:"Source Interface"}),"\n",(0,s.jsxs)(n.p,{children:["All sources must implement the following interface (see ",(0,s.jsx)(n.code,{children:"scraping/scraping.go"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"type Source interface {\n    // ValidateConfig validates the source-specific configuration\n    ValidateConfig(source config.Source) error\n    // Scrape performs a single scrape operation for a source\n    Scrape(source config.Source, serverSettings config.ServerSettings, timeout time.Duration, maxParallel int, tlsConfig *tls.Config) ([]handlers.AppStatus, []handlers.Location, error)\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"supported-source-types",children:"Supported Source Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"prometheus"}),": Scrapes metrics from a Prometheus instance using PromQL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"http"}),": Checks HTTP endpoints for status and content."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"site"}),": Scrapes all app statuses from another Site Availability instance via ",(0,s.jsx)(n.code,{children:"/sync"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"adding-a-new-source",children:"Adding a New Source"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Create a new package"})," under ",(0,s.jsx)(n.code,{children:"backend/scraping/"})," (e.g., ",(0,s.jsx)(n.code,{children:"mynewscraper"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Implement the Source interface"})," with your logic."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Register your source type"})," in ",(0,s.jsx)(n.code,{children:"scraping.go"})," (add a case in ",(0,s.jsx)(n.code,{children:"InitScrapers"}),")."]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Add configuration validation and documentation."})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"minimal-source-config-example",children:"Minimal Source Config Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'sources:\n  - name: "prometheus-main"\n    type: prometheus\n    config:\n      url: http://prometheus:9090\n      apps:\n        - name: myApp\n          location: New York\n          metric: up{instance="app:8080", job="app"}\n\n  - name: "web-monitoring"\n    type: http\n    config:\n      apps:\n        - name: website\n          location: US-East\n          url: https://example.com\n\n  - name: "Server A"\n    type: site\n    config:\n      url: http://server-a:8080\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Validate all required config fields in ",(0,s.jsx)(n.code,{children:"ValidateConfig"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Handle errors gracefully in ",(0,s.jsx)(n.code,{children:"Scrape"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Use structured logging for debugging."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["For more details, see the code in ",(0,s.jsx)(n.code,{children:"backend/scraping/"})," and the real config examples in ",(0,s.jsx)(n.code,{children:"helpers/config/"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var i=r(6540);const s={},c=i.createContext(s);function t(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);