events {
    worker_connections 1024;
}

http {
    # Define the expected bearer token
    map $http_authorization $auth_type {
        default "";
        "~^Basic" "basic";
        "~^Bearer" "bearer";
    }

    # Extract the token value from Authorization header
    map $http_authorization $token {
        default "";
        "~^Bearer\s+(.*)$" $1;
    }

    # Validate the token
    map $token $valid_token {
        default 0;
        "test-token-123" 1;
    }

    server {
        listen 9090;

        location / {
            # Set auth_passed based on auth type
            set $auth_passed 0;

            # If bearer token is valid, set auth_passed to 1
            if ($auth_type = "bearer") {
                set $auth_passed $valid_token;
            }

            # If basic auth was successful, set auth_passed to 1
            if ($auth_type = "basic") {
                set $auth_passed 1;
            }

            # If neither auth method is valid, return 401
            if ($auth_passed != 1) {
                return 401;
            }

            proxy_pass http://prometheus:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }
    }
}
