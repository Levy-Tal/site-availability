# Values for server-b deployment
# This configuration mirrors config-b.yaml for local Kubernetes testing

replicaCount: 1

image:
  repository: levytal/site-availability
  pullPolicy: IfNotPresent

# Configuration file content for server-b
configFile:
  enabled: true
  content:
    server_settings:
      port: 8080
      sync_enable: true
      host_url: http://server-b.local
      labels:
        environment: "staging"
        region: "usa"
        datacenter: "backup"
        team: "platform"
      local_admin:
        enabled: true
        username: "admin"
        password: "admin"
      session_timeout: "12h"
      metrics_auth:
        enabled: true
        type: "basic"
        username: "prometheus"
        password: "prometheus-secret"

    scraping:
      interval: "60s"
      timeout: "1s"
      max_parallel: 10

    documentation:
      title: "Server B Documentation"
      url: "https://server-b.example.com/docs"

    locations:
      - name: Los Angeles
        latitude: 34.0522
        longitude: -118.2437
      - name: Chicago
        latitude: 41.8781
        longitude: -87.6298

    sources:
      - name: prom1
        type: prometheus
        labels:
          service: "staging-monitoring"
          tier: "backend"
          criticality: "medium"
        config:
          url: http://prometheus-server-b:9090
          apps:
            - name: app3
              location: Los Angeles
              metric: up{instance="app:8080", job="app"}
              labels:
                app_type: "web-service"
                importance: "medium"
                owner: "backend-team"
                stage: "testing"
            - name: b-app4
              location: Chicago
              metric: up{instance="localhost:9090", job="prometheus"}
              labels:
                app_type: "monitoring"
                importance: "high"
                owner: "sre-team"
                stage: "staging"
      - name: Server A
        type: site
        labels:
          service: "remote-monitoring"
          tier: "integration"
          criticality: "low"
        config:
          url: http://site-availability-server-a:8080

# Service settings
service:
  type: ClusterIP
  port: 8080

# Ingress for local access
ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: server-b.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Pod Disruption Budget settings
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: 1

# Resource requests and limits
resources:
  limits:
    memory: 256Mi
    ephemeral-storage: 100Mi
    cpu: 500m
  requests:
    cpu: 100m
    memory: 128Mi
    ephemeral-storage: 50Mi

# ServiceMonitor for Prometheus scraping
serviceMonitor:
  enabled: true
  scrapeInterval: 10s
  additionalLabels:
    release: prometheus-server-b
  # Authentication settings for ServiceMonitor
  auth:
    enabled: false
    type: "basic" # "basic" or "bearer"
    # Secret reference for authentication
    secret:
      name: ""
      # For basic auth from secret
      usernameKey: "username"
      passwordKey: "password"
      # For bearer token from secret
      tokenKey: "token"

# Prometheus rules
prometheusRules:
  enabled: true
  # Individual rule enable/disable settings
  rules:
    appDown: true
    appUnavailable: true
    noMetricsReceived: true
    siteSyncFailure: true
    siteSyncHighLatency: true
    siteSyncDown: true
  # Alert filtering for AppDown rule
  appDownAlert:
    # Filter apps by label (e.g., env=prod, team=backend)
    # Leave empty to alert for all apps
    filterLabel: ""
    filterValue: ""

# Grafana dashboards
grafanaDashboards:
  enabled: true

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

# Security context
podSecurityContext:
  fsGroup: 10001

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  allowPrivilegeEscalation: false
